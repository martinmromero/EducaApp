# Generated by Django 4.2.20 on 2025-04-26 15:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Campuses',
            },
        ),
        migrations.CreateModel(
            name='Contenido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='contenidos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('edition', models.CharField(blank=True, max_length=50, null=True)),
                ('pages', models.PositiveIntegerField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='institution_logos/')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('learning_outcomes', models.TextField(blank=True, null=True, verbose_name='Resultados de aprendizaje')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'db_table': 'material_subjects',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre del Tema')),
                ('importance', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Importancia (1-5)')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='material.subject', verbose_name='Asignatura relacionada')),
            ],
            options={
                'unique_together': {('name', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre del Subtema')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='material.topic', verbose_name='Tema relacionado')),
            ],
            options={
                'unique_together': {('name', 'topic')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('opcion_multiple', 'Opción múltiple'), ('verdadero_falso', 'Verdadero/Falso'), ('desarrollo', 'Desarrollo')], default='opcion_multiple', max_length=20, verbose_name='Tipo de pregunta')),
                ('question_text', models.TextField(verbose_name='Texto de la pregunta')),
                ('answer_text', models.TextField(verbose_name='Texto de la respuesta')),
                ('options_json', models.TextField(blank=True, help_text='Formato: {"opciones": ["A", "B", "C"]}', null=True, verbose_name='Opciones (JSON como texto)')),
                ('difficulty', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Dificultad (1-5)')),
                ('source_page', models.IntegerField(blank=True, null=True, verbose_name='Página de referencia')),
                ('chapter', models.CharField(blank=True, max_length=100, null=True, verbose_name='Capítulo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contenido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='material.contenido', verbose_name='Contenido relacionado')),
                ('subject', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='material.subject', verbose_name='Asignatura')),
                ('subtopic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.subtopic', verbose_name='Subtema')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.topic', verbose_name='Tema principal')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario creador')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
                'ordering': ['subject', 'topic', 'subtopic', 'difficulty'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('user', 'Usuario')], default='user', max_length=10)),
                ('institutions', models.ManyToManyField(blank=True, to='material.institution', verbose_name='Instituciones')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearningOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('level', models.PositiveSmallIntegerField(help_text='Nivel de dominio (1: Básico, 2: Intermedio, 3: Avanzado)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to='material.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=10)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='material.institution')),
            ],
            options={
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.CreateModel(
            name='ExamTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('career_name', models.CharField(max_length=255, verbose_name='Carrera')),
                ('year', models.IntegerField(verbose_name='Año')),
                ('exam_type', models.CharField(choices=[('final', 'Final'), ('parcial', 'Parcial')], max_length=10, verbose_name='Tipo de examen')),
                ('partial_number', models.CharField(blank=True, choices=[('1ro', 'Primer Parcial'), ('2do', 'Segundo Parcial'), ('3ro', 'Tercer Parcial'), ('4to', 'Cuarto Parcial')], max_length=10, null=True, verbose_name='Número de parcial')),
                ('exam_mode', models.CharField(choices=[('oral', 'Oral'), ('escrito', 'Escrito')], max_length=10, verbose_name='Modalidad de examen')),
                ('exam_group', models.CharField(choices=[('individual', 'Individual'), ('grupal', 'Grupal')], default='individual', max_length=10, verbose_name='Modalidad grupal')),
                ('shift', models.CharField(blank=True, choices=[('mañana', 'Mañana'), ('tarde', 'Tarde'), ('noche', 'Noche')], max_length=10, null=True, verbose_name='Turno')),
                ('resolution_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tiempo de resolución')),
                ('topics_to_evaluate', models.TextField(blank=True, null=True, verbose_name='Temas a evaluar')),
                ('notes_and_recommendations', models.TextField(blank=True, null=True, verbose_name='Notas y recomendaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.campus', verbose_name='Sede')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', related_query_name='exam_template', to=settings.AUTH_USER_MODEL)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.faculty', verbose_name='Facultad')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.institution', verbose_name='Institución')),
                ('learning_outcomes', models.ManyToManyField(blank=True, to='material.learningoutcome', verbose_name='Resultados de aprendizaje')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Plantilla de Examen',
                'verbose_name_plural': 'Plantillas de Examen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: Parcial 1 - Matemáticas', max_length=255, verbose_name='Título del examen')),
                ('instructions', models.TextField(blank=True, null=True, verbose_name='Instrucciones generales')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Duración (minutos)')),
                ('is_published', models.BooleanField(default=False, verbose_name='Publicado')),
                ('career_name', models.CharField(max_length=255, verbose_name='Carrera')),
                ('year', models.IntegerField(verbose_name='Año')),
                ('exam_type', models.CharField(choices=[('final', 'Final'), ('parcial', 'Parcial')], max_length=10, verbose_name='Tipo de examen')),
                ('partial_number', models.CharField(blank=True, choices=[('1ro', 'Primer Parcial'), ('2do', 'Segundo Parcial'), ('3ro', 'Tercer Parcial'), ('4to', 'Cuarto Parcial')], max_length=10, null=True, verbose_name='Número de parcial')),
                ('exam_mode', models.CharField(choices=[('oral', 'Oral'), ('escrito', 'Escrito')], max_length=10, verbose_name='Modalidad de examen')),
                ('exam_group', models.CharField(choices=[('individual', 'Individual'), ('grupal', 'Grupal')], default='individual', max_length=10, verbose_name='Modalidad grupal')),
                ('shift', models.CharField(blank=True, choices=[('mañana', 'Mañana'), ('tarde', 'Tarde'), ('noche', 'Noche')], max_length=10, null=True, verbose_name='Turno')),
                ('resolution_time', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tiempo de resolución')),
                ('topics_to_evaluate', models.TextField(blank=True, null=True, verbose_name='Temas a evaluar')),
                ('notes_and_recommendations', models.TextField(blank=True, null=True, verbose_name='Notas y recomendaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.campus', verbose_name='Sede')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_templates', to=settings.AUTH_USER_MODEL)),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.faculty', verbose_name='Facultad')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.institution', verbose_name='Institución')),
                ('learning_outcomes', models.ManyToManyField(blank=True, to='material.learningoutcome', verbose_name='Resultados de aprendizaje')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
                ('questions', models.ManyToManyField(related_name='exams', to='material.question', verbose_name='Preguntas')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.subject', verbose_name='Materia')),
                ('topics', models.ManyToManyField(blank=True, related_name='exams', to='material.topic', verbose_name='Temas evaluados')),
            ],
            options={
                'verbose_name': 'Plantilla de Examen',
                'verbose_name_plural': 'Plantillas de Examen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='contenido',
            name='subject',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='material.subject', verbose_name='Subject'),
        ),
        migrations.AddField(
            model_name='contenido',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campus',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campuses', to='material.institution'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['subject', 'question_type'], name='material_qu_subject_80b130_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['contenido'], name='material_qu_conteni_ce5f3f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='learningoutcome',
            unique_together={('subject', 'code')},
        ),
        migrations.AddConstraint(
            model_name='institution',
            constraint=models.CheckConstraint(check=models.Q(('name__gt', '')), name='non_empty_name'),
        ),
        migrations.AddConstraint(
            model_name='institution',
            constraint=models.UniqueConstraint(fields=('name', 'owner'), name='unique_institution_owner'),
        ),
        migrations.AddConstraint(
            model_name='faculty',
            constraint=models.UniqueConstraint(fields=('name', 'institution'), name='unique_faculty_per_institution'),
        ),
        migrations.AddIndex(
            model_name='examtemplate',
            index=models.Index(fields=['exam_type', 'year'], name='material_ex_exam_ty_7ccfb6_idx'),
        ),
        migrations.AddIndex(
            model_name='examtemplate',
            index=models.Index(fields=['subject'], name='material_ex_subject_535ba4_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['exam_type', 'year'], name='material_ex_exam_ty_f3f05a_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['subject'], name='material_ex_subject_530b79_idx'),
        ),
        migrations.AddConstraint(
            model_name='campus',
            constraint=models.UniqueConstraint(fields=('name', 'institution'), name='unique_campus_per_institution'),
        ),
    ]
